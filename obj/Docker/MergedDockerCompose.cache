name: dockercompose3788044830948140336
services:
  adminer:
    container_name: adminer
    depends_on:
      sqlserver:
        condition: service_started
        required: true
    image: adminer
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8082"
        protocol: tcp
  nginx:
    container_name: nginx
    depends_on:
      webapi:
        condition: service_started
        required: true
    image: nginx:alpine
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8081"
        protocol: tcp
    volumes:
      - type: bind
        source: D:\Project\Inflo\InfoTechTest\UserManagement\nginx\default.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
        bind:
          create_host_path: true
  sqlserver:
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
      SA_PASSWORD: P@ssword@123
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: sqlserverdata
        target: /var/opt/mssql
        volume: {}
  webapi:
    build:
      context: D:\Project\Inflo\InfoTechTest\UserManagement
      dockerfile: src/WebAPI/Dockerfile
    depends_on:
      sqlserver:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: Server=sqlserver;Database=UserManagement;User=sa;Password=P@ssword@123;
    image: webapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\gurun\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\gurun\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\gurun\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\gurun\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose3788044830948140336_default
volumes:
  sqlserverdata:
    name: dockercompose3788044830948140336_sqlserverdata