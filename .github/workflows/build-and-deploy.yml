name: Deploy WebAPI and Blazor WASM to Azure

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  DOTNET_VERSION: '9.0.x'
  WEBAPI_OUTPUT: ./artifacts/webapi
  BLAZOR_OUTPUT: ./artifacts/blazor

jobs:
  build:
    name: Build WebAPI & Blazor
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies WebAPI
        run: dotnet restore src/WebAPI/WebAPI.csproj

      - name: Restore dependencies Blazor WASM
        run: dotnet restore src/BlazorClient/BlazorClient.csproj

      

      - name: Restore Unit Tests
        run: dotnet restore tests/UserManagement.UnitTests/UserManagement.UnitTests.csproj

      - name: Restore IntegrationTesting  Tests
        run: dotnet restore tests/UserManagement.IntegrationTesting/UserManagement.IntegrationTesting.csproj 





      - name: Build solution WebAPI
        run: dotnet build src/WebAPI/WebAPI.csproj --configuration Release --no-restore

      - name: Build solution Blazor WASM
        run: dotnet build src/BlazorClient/BlazorClient.csproj --configuration Release --no-restore
        


      - name: Build Unit Tests
        run: dotnet build tests/UserManagement.UnitTests/UserManagement.UnitTests.csproj --configuration Release --no-restore

      - name: Run Unit Tests
        run: dotnet test tests/UserManagement.UnitTests/UserManagement.UnitTests.csproj --configuration Release --no-restore --no-build


      - name: Build IntegrationTesting Tests
        run: dotnet test tests/UserManagement.IntegrationTesting/UserManagement.IntegrationTesting.csproj --configuration Release --no-restore --no-build

      - name: Run IntegrationTesting Tests
        run: dotnet test tests/UserManagement.IntegrationTesting/UserManagement.IntegrationTesting.csproj --configuration Release --no-restore --no-build


      - name: Publish WebAPI
        run: dotnet publish src/WebAPI/WebAPI.csproj -c Release -o ${{ env.WEBAPI_OUTPUT }}
      
      - name: Publish Blazor WASM
        run: dotnet publish src/BlazorClient/BlazorClient.csproj -c Release -o ${{ env.BLAZOR_OUTPUT }}

      - name: Upload WebAPI artifact
        uses: actions/upload-artifact@v4
        with:
          name: webapi-artifact
          path: ${{ env.WEBAPI_OUTPUT }}

      - name: Upload Blazor WASM artifact
        uses: actions/upload-artifact@v4
        with:
          name: blazor-artifact
          path: ${{ env.BLAZOR_OUTPUT }}/wwwroot

  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download WebAPI artifact
        uses: actions/download-artifact@v4
        with:
          name: webapi-artifact
          path: ./webapi

      - name: Deploy WebAPI to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./webapi

      - name: Download Blazor WASM artifact
        uses: actions/download-artifact@v4
        with:
          name: blazor-artifact
          path: ./blazor
      
      - name: Deploy Blazor WASM to Azure Static Web App
        uses: azure/static-web-apps-deploy@v1
        with:
          action: "upload"
          app_location: "./blazor" 
          api_location: ""  # leave blank for Blazor WASM
          output_location: '' # not needed when wwwroot is already published
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
