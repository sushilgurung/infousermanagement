@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

@code {
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user?.Identity?.IsAuthenticated != true)
        {
            var returnUrl = Uri.EscapeDataString(Navigation.Uri);
            Navigation.NavigateTo($"/login?returnUrl={returnUrl}", forceLoad: true);
        }
        // else
        // {
        //     // Authenticated but not authorized
        //     Navigation.NavigateTo("/not-authorized", true); // Optional: create a custom page
        // }
    }
}
